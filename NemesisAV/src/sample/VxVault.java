package sample;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

public class VxVault {

    private String urlPath;

    private String links;

    public VxVault() {
        urlPath = "http://vxvault.net/URL_List.php";
    }
    public String getLinks() throws IOException {
        URL url = new URL(urlPath);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();

        connection.setRequestMethod("GET");
        connection.setRequestProperty("User-Agent", "Mozilla/5.0");

        int responseCode = connection.getResponseCode();
        System.out.println("ResponseCode : " + responseCode);

        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();
        while ((inputLine = in.readLine()) != null) {
            if (inputLine.contains("http") ) {
                response.append(inputLine);
                response.append("\n");
            }

        }
        in.close();
        connection.disconnect();

        links = response.toString();

        return links;
    }

    public void getFile() throws IOException {
        String dirName = "";
        String[] downloadLinks = links.split("\n");

        File file = new File(dirName  + "lastLink.txt");
        String lastLink;

        if (file.exists() && !file.isDirectory()) {
            try (BufferedReader br = new BufferedReader(new FileReader(file.toString()))) {
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();

                while (line != null) {
                    sb.append(line);
                    sb.append(System.lineSeparator());
                    line = br.readLine();
                }
                lastLink = sb.toString().replaceAll("\\r\\n", "");
            }

            for (String downloadLink : downloadLinks) {
                if (downloadLink.compareTo(lastLink) != 0) {
                    try {
                        URL url = new URL(downloadLink);
                        HttpURLConnection connection = (HttpURLConnection) url.openConnection();

                        connection.setRequestMethod("GET");
                        connection.setRequestProperty("User-Agent", "Mozilla/5.0");

                        if (connection.getResponseCode() == 200) {
                            connection.disconnect();
                            Download.downloadUsingNIO(downloadLink, dirName  + downloadLink.substring(7).replace("/", "-"));

                        }
                    } catch (IOException e) {
                        System.out.println("Link Error -> " + downloadLink);
                    }
                }
                else
                    break;
            }

            PrintWriter writer = new PrintWriter(file.toString(), "UTF-8");
            writer.print(downloadLinks[0]);
            writer.close();

        } else {
            for (String downloadLink : downloadLinks) {

                try {
                    URL url = new URL(downloadLink);
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();

                    connection.setRequestMethod("GET");
                    connection.setRequestProperty("User-Agent", "Mozilla/5.0");

                    if (connection.getResponseCode() == 200) {
                        connection.disconnect();
                        Download.downloadUsingNIO(downloadLink, dirName  + downloadLink.substring(7).replace("/", "-"));

                    }
                } catch (IOException e) {
                    System.out.println("Link Error -> " + downloadLink);
                }
            }

            PrintWriter writer = new PrintWriter(file.toString(), "UTF-8");
            writer.print(downloadLinks[0]);
            writer.close();
        }
    }
}
